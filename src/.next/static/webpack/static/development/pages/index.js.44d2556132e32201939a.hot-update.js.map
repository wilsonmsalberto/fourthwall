{"version":3,"file":"static/webpack/static/development/pages/index.js.44d2556132e32201939a.hot-update.js","sources":["webpack:///./components/image/Image.js","webpack:///./components/nominees-list/Movie.js","webpack:///./state/config/selectors.js"],"sourcesContent":["import urlJoin from 'url-join';\n\n// React\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\n// Redux\nimport { connect } from 'react-redux';\n\n// State\nimport * as selectors from 'state/config/selectors';\n\nconst Image = ({\n  baseUrl,\n  size,\n  title,\n  url,\n}) => (\n  <img\n    src={ urlJoin(baseUrl, size, url) }\n    alt={ title }\n  />\n);\n\nImage.propTypes = {\n  baseUrl: PropTypes.string,\n  size: PropTypes.string,\n  title: PropTypes.string.isRequired,\n  url: PropTypes.string.isRequired,\n};\n\nImage.defaultProps = {\n  baseUrl: 'https://image.tmdb.org/t/p/',\n  size: 'original',\n};\n\nconst mapStateToProps = state => ({\n  baseUrl: selectors.getImageBaseUrl(state),\n});\n\nexport default connect(mapStateToProps)(Image);\n","// React\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\n// Redux\nimport { connect } from 'react-redux';\n\n// State\nimport * as selectors from 'state/movies/selectors';\n\n// Components\nimport Image from 'components/image/Image';\n\nconst Movie = ({ url, title }) => (\n  <>\n    <Image\n      url={ url }\n      alt={ title }\n    />\n    <img alt={ title } src={ `https://image.tmdb.org/t/p/w500${image}` } />\n    <h3>{title}</h3>\n  </>\n);\n\nMovie.propTypes = {\n  url: PropTypes.string,\n  title: PropTypes.string,\n};\n\nMovie.defaultProps = {\n  url: '',\n  title: '',\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n  url: selectors.getMovieImageUrl(state, ownProps.id),\n  title: selectors.getMovieTitle(state, ownProps.id),\n});\n\nexport default connect(mapStateToProps)(Movie);\n","/**\n * Module dependencies.\n */\n\nimport * as fromReducer from './reducer';\n\n/**\n  * Export `getConfig` selector.\n  */\n\nexport const getConfig = state => fromReducer.getConfig(state.config);\n\n/**\n * Export `getImageProperties` selector.\n */\n\nexport const getImageProperties = (state) => {\n  const config = getConfig(state);\n\n  return config.images;\n};\n\n/**\n * Export `getImageBaseUrl` selector.\n */\n\nexport const getImageBaseUrl = (state) => {\n  const imageProperties = getImageProperties(state);\n\n  return imageProperties.secure_base_url;\n};\n\n/**\n * Export `getImageBackdropSizes` selector.\n */\n\nexport const getImageBackdropSizes = (state) => {\n  const imageProperties = getImageProperties(state);\n\n  return imageProperties.backdrop_sizes;\n};\n\n/**\n * Export `getImageLogoSizes` selector.\n */\n\nexport const getImageLogoSizes = (state) => {\n  const imageProperties = getImageProperties(state);\n\n  return imageProperties.logo_sizes;\n};\n\n/**\n * Export `getImagePosterSizes` selector.\n */\n\nexport const getImagePosterSizes = (state) => {\n  const imageProperties = getImageProperties(state);\n\n  return imageProperties.poster_sizes;\n};\n\n/**\n * Export `getImageProfileSizes` selector.\n */\n\nexport const getImageProfileSizes = (state) => {\n  const imageProperties = getImageProperties(state);\n\n  return imageProperties.profile_sizes;\n};\n"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AANA;AACA;AAWA;AACA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AAFA;AACA;AAIA;AAAA;AACA;AADA;AAAA;AACA;AAGA;;;;;;;;;;;;;;;;;;;;;ACxCA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAPA;AACA;AAUA;AACA;AACA;AAFA;AAKA;AACA;AACA;AAFA;AACA;AAIA;AAAA;AACA;AACA;AAFA;AAAA;AACA;AAIA;;;;;;;;;;;;ACvCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAIA;AAEA;;;;AAIA;AAAA;AAAA;AAEA;;;;AAIA;AACA;AAEA;AACA;AAEA;;;;AAIA;AACA;AAEA;AACA;AAEA;;;;AAIA;AACA;AAEA;AACA;AAEA;;;;AAIA;AACA;AAEA;AACA;AAEA;;;;AAIA;AACA;AAEA;AACA;AAEA;;;;AAIA;AACA;AAEA;AACA;;;;A","sourceRoot":""}